#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ø–∏—Å–∫–∞ —Ç–∏–∫–µ—Ä–æ–≤ –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö —Å investfunds.ru
"""

import pandas as pd
from pathlib import Path

def generate_missing_tickers_list():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ ETF
    data_files = list(Path('.').glob('enhanced_etf_data_*.csv'))
    if not data_files:
        data_files = list(Path('.').glob('full_moex_etf_data_*.csv'))

    latest_data = max(data_files, key=lambda x: x.stat().st_mtime)
    etf_data = pd.read_csv(latest_data)

    # –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏ (–µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ)
    known_tickers = {'LQDT', 'AKMB', 'AMGL', 'AMNR', 'AMNY', 'AMRE'}

    # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)
    missing_data = etf_data[~etf_data['ticker'].isin(known_tickers)].copy()

    print('üéØ –ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö –¢–ò–ö–ï–†–û–í –ë–ï–ó –î–ê–ù–ù–´–• –° INVESTFUNDS.RU')
    print('‚ïê' * 80)
    print(f'üìä –í—Å–µ–≥–æ —Ñ–æ–Ω–¥–æ–≤: {len(etf_data)}')
    print(f'‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ: {len(known_tickers)} —Ñ–æ–Ω–¥–æ–≤')
    print(f'‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö: {len(missing_data)} —Ñ–æ–Ω–¥–æ–≤')
    print()

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    if 'avg_daily_value_rub' in missing_data.columns:
        missing_data = missing_data.sort_values('avg_daily_value_rub', ascending=False, na_last=True)
        
        print('üìà –¢–û–ü-20 –ü–†–ò–û–†–ò–¢–ï–¢–ù–´–• –§–û–ù–î–û–í (–ø–æ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏):')
        print('‚ïê' * 80)
        
        for i, (_, row) in enumerate(missing_data.head(20).iterrows(), 1):
            ticker = row['ticker']
            uc = str(row.get('management_company', 'Unknown'))[:30]
            volume = row.get('avg_daily_value_rub', 0)
            
            if pd.notna(volume) and volume > 0:
                print(f'{i:2d}. {ticker:6} | {uc:30} | {volume/1e6:8.1f} –º–ª–Ω ‚ÇΩ/–¥–µ–Ω—å')
            else:
                print(f'{i:2d}. {ticker:6} | {uc:30} | {"‚Äî":>12}')
        print()

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –£–ö
    print('üè¢ –ì–†–£–ü–ü–ò–†–û–í–ö–ê –ü–û –£–ü–†–ê–í–õ–Ø–Æ–©–ò–ú –ö–û–ú–ü–ê–ù–ò–Ø–ú:')
    print('‚ïê' * 80)
    
    for uc, group in missing_data.groupby('management_company', dropna=False):
        if pd.isna(uc):
            uc = 'Unknown'
        
        tickers = sorted(group['ticker'].tolist())
        print(f'üìç {uc} ({len(tickers)} —Ñ–æ–Ω–¥–æ–≤):')
        
        # –í—ã–≤–æ–¥–∏–º –ø–æ 8 —Ç–∏–∫–µ—Ä–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
        for i in range(0, len(tickers), 8):
            line_tickers = tickers[i:i+8]
            print(f'   {" ".join(t.ljust(6) for t in line_tickers)}')
        print()

    # –ü–æ–ª–Ω—ã–π –∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫
    print('üìã –ü–û–õ–ù–´–ô –ê–õ–§–ê–í–ò–¢–ù–´–ô –°–ü–ò–°–û–ö (90 —Ñ–æ–Ω–¥–æ–≤):')
    print('‚ïê' * 80)
    
    all_missing = sorted(missing_data['ticker'].tolist())
    
    # –í—ã–≤–æ–¥–∏–º –ø–æ 10 –≤ —Å—Ç—Ä–æ–∫–µ
    for i in range(0, len(all_missing), 10):
        line_tickers = all_missing[i:i+10]
        line_nums = [f'{j+1:2d}.' for j in range(i, min(i+10, len(all_missing)))]
        
        for num, ticker in zip(line_nums, line_tickers):
            print(f'{num} {ticker:6}', end='  ')
        print()
    
    print()
    print('üíæ –°–ü–ò–°–û–ö –î–õ–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):')
    print('‚ïê' * 80)
    print(', '.join(all_missing))
    
    print()
    print('üí° –§–û–†–ú–ê–¢ –î–õ–Ø –ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–ò–Ø –°–°–´–õ–û–ö:')
    print('‚ïê' * 80)
    print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:')
    print('TICKER: https://investfunds.ru/funds/ID/')
    print()
    print('–ù–∞–ø—Ä–∏–º–µ—Ä:')
    print('AKAI: https://investfunds.ru/funds/12345/')
    print('AKBC: https://investfunds.ru/funds/67890/')
    print('...')

if __name__ == "__main__":
    generate_missing_tickers_list()