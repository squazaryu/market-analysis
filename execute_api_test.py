#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '/Users/tumowuh/Desktop/market analysis')

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
try:
    from run_api_testing import main
    
    print("üîç –ù–ê–ß–ò–ù–ê–ï–ú –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ò–°–¢–û–ß–ù–ò–ö–û–í...")
    print("-" * 50)
    
    results, recommendations = main()
    
    if results and recommendations:
        print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {results['summary']['success_rate']}%")
        print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö API: {results['summary']['active_apis']}")
        print(f"üî∂ –° –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏: {results['summary']['limited_apis']}")
        print(f"‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö: {results['summary']['error_apis']}")
        
        print(f"\nüìã –ö–õ–Æ–ß–ï–í–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        
        if recommendations['primary_sources']:
            print(f"ü•á –û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
            for source in recommendations['primary_sources']:
                print(f"   ‚Ä¢ {source['name']}")
        
        if recommendations['secondary_sources']:
            print(f"ü•à –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:")
            for source in recommendations['secondary_sources']:
                print(f"   ‚Ä¢ {source['name']}")
        
        print(f"\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª–∞—Ö:")
        print(f"   ‚Ä¢ api_testing_results.png - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")
        print(f"   ‚Ä¢ api_testing_report_*.md - –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç")
        print(f"   ‚Ä¢ api_research_results_*.json - —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
    else:
        print("‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    
except Exception as e:
    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()